# Generated by Django 3.2.13 on 2022-11-13 15:08

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('employee', '0002_add_fields_and_models_to_expand_employee_model'),
        ('timeoff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccrualMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('removed', models.BooleanField(default=False)),
                ('accrual_milestone_name', models.CharField(max_length=255)),
                ('accrued_amount', models.FloatField()),
                ('policy_start_date', models.DateTimeField(blank=True, null=True)),
                ('accrual_frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('EVERY_OTHER_WEEK', 'Every other week'), ('TWICE_A_MONTH', 'Twice a month'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quartely'), ('TWICE_A_AYEAR', 'Twice a year'), ('YEARLY', 'Yearly'), ('ON_HIRE_DATE_ANNIVERSARY', 'On Hire Date Anniversary'), ('PER_HOUR_WORKED', 'Per hour worked')], max_length=50)),
                ('weekly_day', models.CharField(blank=True, choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=50, null=True)),
                ('every_other_week_day', models.CharField(blank=True, choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=50, null=True)),
                ('every_other_week_day_start', models.CharField(blank=True, choices=[('IMMEDIATE', 'Immediate'), ('NEXT', 'Next')], max_length=50, null=True)),
                ('twice_amonth_day1', models.IntegerField(blank=True, null=True)),
                ('twice_amonth_day2', models.IntegerField(blank=True, null=True)),
                ('monthly_day', models.IntegerField(blank=True, null=True)),
                ('quartely_quarter1_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('quartely_quarter1_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quartely_quarter2_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('quartely_quarter2_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quartely_quarter3_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('quartely_quarter3_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('quartely_quarter4_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('quartely_quarter4_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('twice_ayear_first_half_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('twice_ayear_first_half_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('twice_ayear_second_half_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('twice_ayear_second_half_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('yearly_month', models.CharField(blank=True, choices=[('JANUARY', 'January'), ('FEBUARY', 'February'), ('MARCH', 'March'), ('APRIL', 'April'), ('MAY', 'May'), ('JUNE', 'June'), ('JULY', 'July'), ('AUGUST', 'August'), ('SEPTEMBER', 'September'), ('OCTOBER', 'October'), ('NOVEMBER', 'November'), ('DECEMBER', 'December')], max_length=20, null=True)),
                ('yearly_month_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('is_waiting_period_on', models.BooleanField(default=False)),
                ('waiting_period', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('waiting_period_unit', models.CharField(blank=True, choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months'), ('YEARS', 'Years')], max_length=10, null=True)),
                ('is_accrual_balance_limit_on', models.BooleanField(default=False)),
                ('accrual_balance_limit', models.FloatField(blank=True, null=True)),
                ('carry_over_unused_time_off_after_carry_over_date', models.BooleanField(default=False)),
                ('is_carry_over_unused_time_off_limit_on', models.BooleanField(default=False)),
                ('carry_over_unused_time_off_up_to', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('removed', models.BooleanField(default=False)),
                ('holiday_name', models.CharField(max_length=255)),
                ('observed_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateTimeField()),
                ('to_date', models.DateTimeField()),
                ('amount', models.FloatField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WorkWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('removed', models.BooleanField(default=False)),
                ('work_week', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=7)),
                ('hours_per_workday', models.PositiveSmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveConstraint(
            model_name='leavepolicy',
            name='twice_amonth_day1_should_be_15th_and_below',
        ),
        migrations.RemoveConstraint(
            model_name='leavepolicy',
            name='twice_amonth_day2_should_be_above_15th',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='accrual_balance_limit',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='accrual_frequency',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='accrued_amount',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='carry_over_unused_time_off_after_carry_over_date',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='carry_over_unused_time_off_up_to',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='every_other_week_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='every_other_week_day_start',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='is_accrual_balance_limit_on',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='is_carry_over_unused_time_off_limit_on',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='is_waiting_period_on',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='monthly_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter1_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter1_month_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter2_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter2_month_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter3_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter3_month_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter4_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='quartely_quarter4_month_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='twice_amonth_day1',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='twice_amonth_day2',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='twice_ayear_first_half_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='twice_ayear_first_half_month_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='twice_ayear_second_half_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='twice_ayear_second_half_month_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='waiting_period',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='waiting_period_unit',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='weekly_day',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='yearly_month',
        ),
        migrations.RemoveField(
            model_name='leavepolicy',
            name='yearly_month_day',
        ),
        migrations.AddField(
            model_name='leavepolicy',
            name='employees',
            field=models.ManyToManyField(blank=True, null=True, related_name='leave_policies', to='employee.Employee'),
        ),
        migrations.AddField(
            model_name='leavepolicy',
            name='is_negative_balance_limit_on',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='leavepolicy',
            name='negative_balance_limit',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='leaverequest',
            name='employee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='employee.employee'),
        ),
        migrations.AddField(
            model_name='leaverequest',
            name='leave_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='timeoff.leavecategory'),
        ),
        migrations.AddField(
            model_name='holiday',
            name='employees',
            field=models.ManyToManyField(related_name='holidays', to='employee.Employee'),
        ),
        migrations.AddField(
            model_name='accrualmilestone',
            name='leave_policy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='timeoff.leavepolicy'),
        ),
        migrations.AddConstraint(
            model_name='accrualmilestone',
            constraint=models.CheckConstraint(check=models.Q(('twice_amonth_day1__lte', 15)), name='twice_amonth_day1_should_be_15th_and_below'),
        ),
        migrations.AddConstraint(
            model_name='accrualmilestone',
            constraint=models.CheckConstraint(check=models.Q(('twice_amonth_day2__gt', 15)), name='twice_amonth_day2_should_be_above_15th'),
        ),
    ]
